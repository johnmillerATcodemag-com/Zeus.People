{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "actionGroupName": {
      "type": "string",
      "defaultValue": "zeus-people-alerts",
      "metadata": {
        "description": "Name of the action group for notifications"
      }
    },
    "emailAddress": {
      "type": "string",
      "metadata": {
        "description": "Email address for alert notifications"
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Application Insights instance"
      }
    },
    "databaseServerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the SQL Database server"
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "Name of the SQL Database"
      }
    },
    "serviceBusNamespace": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    }
  },
  "variables": {
    "webAppResourceId": "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
    "applicationInsightsResourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
    "databaseResourceId": "[resourceId('Microsoft.Sql/servers/databases', parameters('databaseServerName'), parameters('databaseName'))]",
    "serviceBusResourceId": "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespace'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('actionGroupName')]",
      "location": "global",
      "properties": {
        "groupShortName": "ZeusAlerts",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "EmailAlert",
            "emailAddress": "[parameters('emailAddress')]",
            "useCommonAlertSchema": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "HighErrorRate",
      "location": "global",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "description": "Alert when error rate exceeds 5% in 5 minutes",
        "severity": 2,
        "enabled": true,
        "scopes": ["[variables('webAppResourceId')]"],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 5,
              "name": "ErrorRateThreshold",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "Http5xx",
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "SlowResponseTime",
      "location": "global",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "description": "Alert when 95th percentile response time exceeds 2 seconds",
        "severity": 3,
        "enabled": true,
        "scopes": ["[variables('webAppResourceId')]"],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 2000,
              "name": "ResponseTimeThreshold",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "AverageResponseTime",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "HighCPUUsage",
      "location": "global",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "description": "Alert when CPU usage exceeds 80% for 5 minutes",
        "severity": 3,
        "enabled": true,
        "scopes": ["[variables('webAppResourceId')]"],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 80,
              "name": "CPUThreshold",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "CpuTime",
              "operator": "GreaterThan",
              "timeAggregation": "Total",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "HighMemoryUsage",
      "location": "global",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "description": "Alert when memory usage exceeds 85% for 5 minutes",
        "severity": 2,
        "enabled": true,
        "scopes": ["[variables('webAppResourceId')]"],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 85000000,
              "name": "MemoryThreshold",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "AverageMemoryWorkingSet",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2021-02-01-preview",
      "name": "DatabaseConnectionFailures",
      "location": "[resourceGroup().location]",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "displayName": "Database Connection Failures",
        "description": "Alert when database connection failures occur",
        "severity": 1,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('applicationInsightsResourceId')]"],
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "query": "exceptions | where customDimensions.Category == \"Database\" and customDimensions.EventId == \"100\" | summarize count() by bin(timestamp, 5m)",
              "timeAggregation": "Count",
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {
                "numberOfEvaluationPeriods": 1,
                "minFailingPeriodsToAlert": 1
              }
            }
          ]
        },
        "actions": {
          "actionGroups": [
            "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2021-02-01-preview",
      "name": "AuthenticationFailures",
      "location": "[resourceGroup().location]",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "displayName": "Authentication Failures",
        "description": "Alert when authentication failure rate exceeds threshold",
        "severity": 2,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('applicationInsightsResourceId')]"],
        "windowSize": "PT10M",
        "criteria": {
          "allOf": [
            {
              "query": "traces | where customDimensions.Category == \"Authentication\" and customDimensions.EventId == \"101\" | summarize count() by bin(timestamp, 5m)",
              "timeAggregation": "Count",
              "operator": "GreaterThan",
              "threshold": 10,
              "failingPeriods": {
                "numberOfEvaluationPeriods": 2,
                "minFailingPeriodsToAlert": 1
              }
            }
          ]
        },
        "actions": {
          "actionGroups": [
            "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "ServiceBusMessageBacklog",
      "location": "global",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "description": "Alert when Service Bus message count exceeds threshold",
        "severity": 3,
        "enabled": true,
        "scopes": ["[variables('serviceBusResourceId')]"],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "threshold": 100,
              "name": "MessageCountThreshold",
              "metricNamespace": "Microsoft.ServiceBus/namespaces",
              "metricName": "ActiveMessages",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2021-02-01-preview",
      "name": "BusinessRuleViolations",
      "location": "[resourceGroup().location]",
      "dependsOn": ["[parameters('actionGroupName')]"],
      "properties": {
        "displayName": "Business Rule Violations",
        "description": "Alert when business rule violations exceed threshold",
        "severity": 2,
        "enabled": true,
        "evaluationFrequency": "PT15M",
        "scopes": ["[variables('applicationInsightsResourceId')]"],
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "query": "customEvents | where name == \"BusinessRuleViolation\" | summarize count() by bin(timestamp, 15m)",
              "timeAggregation": "Count",
              "operator": "GreaterThan",
              "threshold": 5,
              "failingPeriods": {
                "numberOfEvaluationPeriods": 1,
                "minFailingPeriodsToAlert": 1
              }
            }
          ]
        },
        "actions": {
          "actionGroups": [
            "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
          ]
        }
      }
    }
  ],
  "outputs": {
    "actionGroupId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
    },
    "actionGroupName": {
      "type": "string",
      "value": "[parameters('actionGroupName')]"
    }
  }
}
